# Stubs for delira.utils.context_managers (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

import torch
from typing import Any, Callable, Dict, Generator, Optional, Union

class DefaultOptimWrapperTorch:
    _optimizer: Any = ...
    def __init__(self, optimizer: torch.optim.Optimizer, *args: Any, **kwargs: Any) -> None: ...
    def scale_loss(self, loss: torch.Tensor) -> Generator: ...
    def step(self, closure: Optional[Callable]=...) -> None: ...
    def __getattr__(self, attr: Any) -> Any: ...
    def __getstate__(self) -> Any: ...
    def __setstate__(self, *args: Any, **kwargs: Any) -> None: ...
    def __repr__(self) -> Any: ...
    def state_dict(self) -> Dict[str, Union[torch.Tensor, dict]]: ...
    def load_state_dict(self, state_dict: dict) -> None: ...
    def zero_grad(self) -> None: ...
    def add_param_group(self, param_group: dict) -> None: ...

class DebugMode:
    _mode: Any = ...
    def __init__(self, mode: bool) -> None: ...
    def _switch_to_new_mode(self) -> None: ...
    def __enter__(self) -> None: ...
    def __exit__(self, *args: Any, **kwargs: Any) -> None: ...

class DebugEnabled(DebugMode):
    def __init__(self) -> None: ...

class DebugDisabled(DebugMode):
    def __init__(self) -> None: ...
